<?xml version="1.0" encoding="UTF-8"?>
<icstructure>
    <long_name>MARS 3D Ichthyop configuration file</long_name>
    <description>Predefined parameters for MARS dataset from NetCDF files.</description>
    <block type="option">
        <tree_path>Main/Time</tree_path>
        <key>app.time</key>
        <description>Set the general time options of the simulation.</description>
        <parameters>
            <parameter type="serial">
                <key>initial_time</key>
                <long_name>Beginning of simulation</long_name>
                <value>year 2010 month 05 day 13 at 10:00</value>
                <format>date</format>
                <description>Set the beginning date and time of the simulation. Format: year #### month ## day ## at HH:mm.</description>
            </parameter>
            <parameter type="serial">
                <key>transport_duration</key>
                <long_name>Transport duration</long_name>
                <value>0000 day(s) 12 hour(s) 00 minute(s)</value>
                <format>duration</format>
                <description>Set the duration of particle transport. Format: #### day(s) ## hour(s) ## minute(s)</description>
            </parameter>
            <parameter hidden="true">
                <key>keep_drifting</key>
                <long_name>Particle keep drifting</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>Determine whether a particle should be deactivated or on the contrary should keep drifting once its age exceeds transport duration. This parameter only operates with several release events (see section release schedule) when the simulation duration is upper than the transport duration.</description>
            </parameter>
            <parameter type="serial">
                <key>time_step</key>
                <long_name>Time step [second]</long_name>
                <value>600</value>
                <format>integer</format>
                <description>The computational time step (dt) expressed in seconds. Take great care for setting this parameter. Simulation must not break the CFL criterion: (U * dt) / dX inferior to 1 with U the velocity and dX the move. An acceptable estimation could be dt = 0.7 * dGrid / Umax with dGrid the average length of the grid cells and Umax the order of magnitude of the fastest current velocities in the hydrodynamic model.</description>
            </parameter>
            <parameter hidden="true">
                <key>calendar_type</key>
                <long_name>Type of calendar</long_name>
                <value>Gregorian calendar</value>
                <format>combo</format>
                <accepted>Climatology calendar</accepted>
                <accepted>Gregorian calendar</accepted>
                <default>Gregorian calendar</default>
                <description>Choose the type of calendar for converting the time variable of the hydrodynamic model (expressed in seconds) into human readble time format. Climatology calendar: 360 days per year. Gregorian calendar: the usual calendar. If you do not know, just skip it ! It is a "cosmetic" parameter that does not affect the run of the simulation. It only controls the display of time on screen.</description>
            </parameter>
            <parameter hidden="true">
                <key>time_origin</key>
                <long_name>Origin of time</long_name>
                <value>year 1900 month 01 day 01 at 00:00</value>
                <format>date</format>
                <default>year 1900 month 01 day 01 at 00:00</default>
                <description>This parameter comes with Gregorian type of calendar only. For hydrodynamic models that record time variable according to a Gregorian calendar, time is the number of seconds elapsed since an origin of time. Most of the time, origin of time starts 1900/01/01 00:00. Nevertheless, for some simulations, you may have to set another origin of time for the Gregorian calendar. This origin is usually defined as an attribute of the time variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter hidden="true">
                <key>time_arrow</key>
                <long_name>Direction of the simulation</long_name>
                <value>forward</value>
                <format>combo</format>
                <accepted>backward</accepted>
                <accepted>forward</accepted>
                <default>forward</default>
                <description>Run the simulation backward or forward in time. Ichthyop advection schemes are not 'centered in time' which raises some questions for backtracking. Please refer to the userguide for details.</description>
            </parameter>
        </parameters>
    </block>
    <block type="option">
        <tree_path>Advanced/Transport/General</tree_path>
        <key>app.transport</key>
        <description>Set the general transport options of the simulation.</description>
        <parameters>
            <parameter>
                <key>coastline_behavior</key>
                <long_name>Coastline behavior</long_name>
                <value>Beaching</value>
                <default>Beaching</default>
                <format>combo</format>
                <accepted>None</accepted>
                <accepted>Beaching</accepted>
                <accepted>Bouncing</accepted>
                <accepted>Standstill</accepted>
                <description>Determines what should be the behavior of a particle in case a move would take it inland : either it stands still, either it beaches, either it bounces on the coasline as a billiard ball.</description>
            </parameter>
        </parameters>
    </block>
    <block type="option">
        <key>app.output</key>
        <description>Block of options that controls the record of the particle tracks in NetCDF ouput files.</description>
        <tree_path>Main/Output</tree_path>
        <parameters>
            <parameter>
                <key>file_prefix</key>
                <long_name>Prefix of the NetCDF output file</long_name>
                <value>mars3d</value>
                <default>my-simulation</default>
                <description>Type the prefix of the simulation output file. The output filename will look like your-prefix_ichthyop-runYYYYMMDDHHmm.nc, with YYYYMMDDHHmm the current time when running the simulation.</description>
            </parameter>
            <parameter>
                <key>output_path</key>
                <long_name>Output path</long_name>
                <value>output</value>
                <format>path</format>
                <default>output</default>
                <description>Select the folder where the simulation NetCDF output file should be saved. For instance, relative paths 'output' or 'output/' or './output' or './output/' are supported and equivalent. They will be interpretated as /path_from_where_you_run_ichthyop/ouput/ If ouput folder does not exist, application will attempt to create it.</description>
            </parameter>
            <parameter>
                <key>record_frequency</key>
                <long_name>Record frequency</long_name>
                <value>2</value>
                <format>integer</format>
                <default>4</default>
                <description>Lagrangian model runs with its own computational time-step, set in the 'time option block'. You may not need to record every step of the simulation in the NetCDF output file. Set the record frequency as a number of computational time-steps. For instance, let's take dt = 1800s and record frequency = 6. Particle positions will be recorded every 3 hours (1800 * 6 = 10800s = 3h) in the NetCDF output file.</description>
            </parameter>
            <parameter hidden="true">
                <key>trackers</key>
                <long_name>Variable tracking</long_name>
                <format>list</format>
                <value />
                <default />
                <description>Name of some extra variables you wish to track during the simulation. It must exactly match the name of the corresponding variable in the hydrodynamic dataset. By default, the application records time, longitude, latitude, depth and mortality. For instance, if you wish to track temperature and salinity at particle location, you should type here the names of temperature and salinity variables as they are declared in the hydrodynamic dataset. E.g: "TEMP" "SALT". Some actions will also automatically tracks some additional variables: for instance Linear growth process will track particle length and particle biological stage ((as long as it is enabled, for sure). It will always be explicitly reminded in the description of each action.</description>
            </parameter>
        </parameters>
    </block>
    <block type="dataset">
        <key>dataset.mars_3d</key>
        <tree_path>Main/MARS 3D</tree_path>
        <description>Block of options for managing the hydrodynamic dataset. Pre-defined block for MARS model, 3D simulation and local NetCDF files.</description>
        <parameters>
            <parameter>
                <key>input_path</key>
                <long_name>Input path</long_name>
                <value>input</value>
                <default>input</default>
                <format>path</format>
                <description>Folder containing the MARS NetCDF files. Relative pathnames are supported. For instance, 'input' or 'input/' or './input' or './input/' are equivalent. Notice the application ignores the subfolders and can only "see" the files located in this folder that matches the "File filter".</description>
            </parameter>
            <parameter>
                <key>file_filter</key>
                <long_name>File filter</long_name>
                <value>*iroise*.nc</value>
                <default>*.nc</default>
                <description>Filename filter. Accepted metacharacters * (for any String) and ? (for any single character). Let's say the input files you want to use for the simulation are in a folder with many other files (not necessarily NetCDF format), but they all have the same prefix. Your file filter will look like prefix*.nc</description>
            </parameter>
            <parameter>
                <key>skip_sorting</key>
                <long_name>Skip NetCDF file sorting</long_name>
                <value>false</value>
                <default>false</default>
                <format>boolean</format>
                <description>Ichthyop chronologically sorts the list of NetCDF input files by comparing the first value of the time variable of each file. Depending on the number of files, the speed for accessing and reading the files, the sorting might take very long time at simulation setup. If the files are already chronologically sorted thanks to their names, you should skip the sorting to increase performance.</description>
            </parameter>
            <parameter>
                <key>shrink_domain</key>
                <long_name>Shrink simulated domain</long_name>
                <value>false</value>
                <default>false</default>
                <format>boolean</format>
                <description>Shrink the size of the domain for running the simulation. It avoids to download the whole data when you are working on a localized area. If "true", you must define the coordinates of the Northwest corner and the Southeast corner of the resized area. If "false", the Northwest corner and the Southeast corner parameters are ignored by the application.</description>
            </parameter>
            <parameter>
                <key>north-west-corner.lat</key>
                <long_name>Latitude of Northwest corner [North degree]</long_name>
                <value>0.0</value>
                <description>Set the latitude of Northwest corner for resizing the simulated domain. You can change the coordinate format when editing the value.</description>
                <format>lonlat</format>
                <default>0.0</default>
            </parameter>
            <parameter>
                <key>north-west-corner.lon</key>
                <long_name>Longitude of Northwest corner [East degree]</long_name>
                <value>0.0</value>
                <description>Set the longitude of Northwest corner for resizing the simulated domain. You can change the coordinate format when editing the value.</description>
                <format>lonlat</format>
                <default>0.0</default>
            </parameter>
            <parameter>
                <key>south-east-corner.lat</key>
                <long_name>Latitude of Southeast corner [North degree]</long_name>
                <value>0.0</value>
                <description>Set the latitude of Southeast corner for resizing the simulated domain. You can change the coordinate format when editing the value.</description>
                <format>lonlat</format>
                <default>0.0</default>
            </parameter>
            <parameter>
                <key>south-east-corner.lon</key>
                <long_name>Longitude of Southeast corner [East degree]</long_name>
                <value>0.0</value>
                <description>Set the longitude of Southeast corner for resizing the simulated domain. You can change the coordinate format when editing the value.</description>
                <format>lonlat</format>
                <default>0.0</default>
            </parameter>
            <parameter>
                <key>field_dim_lat</key>
                <long_name>Dimension in the latitudinal direction</long_name>
                <value>latitude</value>
                <default>latitude</default>
                <description>Name of the NetCDF dimension in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_dim_lon</key>
                <long_name>Dimension in the longitudinal direction</long_name>
                <value>longitude</value>
                <default>longitude</default>
                <description>Name of the NetCDF dimension in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_dim_z</key>
                <long_name>Dimension in the vertical direction</long_name>
                <value>level</value>
                <default>level</default>
                <description>Name of the NetCDF dimension in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_dim_time</key>
                <long_name>Dimension in time</long_name>
                <value>time</value>
                <default>time</default>
                <description>Name of the NetCDF dimension in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_bathy</key>
                <long_name>Bathymetry at Rho points</long_name>
                <value>h0</value>
                <default>H0</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_lat</key>
                <long_name>Latitude of Rho points</long_name>
                <value>latitude</value>
                <default>latitude</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_lon</key>
                <long_name>Longitude of Rho points</long_name>
                <value>longitude</value>
                <default>longitude</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_time</key>
                <long_name>Averaged time since initialization</long_name>
                <value>time</value>
                <default>time</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_sigma</key>
                <long_name>Ocean sigma coordinate</long_name>
                <value>level</value>
                <default>level</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_hc</key>
                <long_name>HC</long_name>
                <value>hc</value>
                <default>hc</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_a</key>
                <long_name>Surface control parameter</long_name>
                <value>theta</value>
                <default>theta</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_b</key>
                <long_name>Surface control parameter</long_name>
                <value>b</value>
                <default>b</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_u</key>
                <long_name>Zonal velocity</long_name>
                <value>uz</value>
                <default>UZ</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_v</key>
                <long_name>Meridional velocity</long_name>
                <value>vz</value>
                <default>VZ</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>field_var_zeta</key>
                <long_name>Free-surface elevation</long_name>
                <value>xe</value>
                <default>XE</default>
                <description>Name of the NetCDF variable in the hydrodynamic dataset.</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.dataset.Mars3dDataset</value>
                <default>org.previmer.ichthyop.dataset.Mars3dDataset</default>
                <format>class</format>
                <description>The Java class called by the application to implement this dataset.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.advection</key>
        <description>Options that control the advection process.</description>
        <tree_path>Advanced/Transport/Advection</tree_path>
        <enabled>true</enabled>
        <parameters>
            <parameter>
                <key>scheme</key>
                <long_name>Numerical scheme</long_name>
                <value>Forward Euler</value>
                <default>Forward Euler</default>
                <format>combo</format>
                <accepted>Forward Euler</accepted>
                <accepted>Runge Kutta 4</accepted>
                <description>Use a Forward Euler scheme or a Runge-Kutta 4th order scheme.</description>
            </parameter>
            <parameter hidden="true">
                <key>horizontal</key>
                <long_name>Horizontal advection</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>Determine whether horizontal advection is enabled.</description>
            </parameter>
            <parameter hidden="true">
                <key>vertical</key>
                <long_name>Vertical advection</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>Determine whether vertical advection is enabled. For 2D simulations, this parameter is ignored.</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.AdvectionAction</value>
                <default>org.previmer.ichthyop.action.AdvectionAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <long_name>priority</long_name>
                <key>priority</key>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
                <value>high</value>
                <default>high</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.hdisp</key>
        <description>Block of options that control the horizontal dispersion process. Horizontal dispersion has been implemented following Peliz et al. (2007)</description>
        <tree_path>Advanced/Transport/Horizontal dispersion</tree_path>
        <enabled>false</enabled>
        <parameters>
            <parameter type="serial">
                <key>epsilon</key>
                <long_name>Dissipation rate [meter2/second3]</long_name>
                <value>1E-9</value>
                <description>In the horizontal dispersion model, Peliz defined a lagrangian horizontal diffusion coefficient Kh = pow(epsilon, 1/3) * pow(l, 4/3), following Monin and Ozmidov 1981, with epsilon the turbulent dissipation rate [meter2/second3] and l the lenght of the grid cell (l is determined by the application). Monin and Ozmidov suggested epsilon = 1e-9. Make sure you have read and understood Monin and Ozmidov's paper before changing this value.</description>
                <format>float</format>
                <default>1E-9</default>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.HDispAction</value>
                <default>org.previmer.ichthyop.action.HDispAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>normal</value>
                <default>normal</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.buoyancy</key>
        <description>Block of options that control the buoyancy process. This block can be enabled for 3D simulations only. It requires sea water salinity and sea water temperature fields to compute sea water density. Do not activate this process unless you know that the hydrodynamic dataset provides both variables.</description>
        <tree_path>Advanced/Transport/Buoyancy</tree_path>
        <enabled>false</enabled>
        <parameters>
             <parameter type="serial">
                <key>particle_density</key>
                <long_name>Particle density [g/cm3]</long_name>
                <value>1.025</value>
                <format>float</format>
                <default>1.025</default>
                <description>Particle density [g/cm3]. Basically, if density is superior to sea water density, particle will sink, if density is inferior to sea water density, particle will go up to the surface. If you want to force particles to keep close surface, take density = 0.9, for instance. This parameter is ignored when a density file (density as age function, refer to next parameter for details) is provided.</description>
            </parameter>
            <parameter>
                <key>density_file</key>
                <long_name>Density file</long_name>
                <value />
                <format>textfile</format>
                <default />
                <template>density_function.csv</template>
                <description>Particle density as an age function. The parameter is the pathname of CSV file (semicolon separator) that contains two columns. Headers Time(hour);Density(g/cm3). If this parameter is left void, ichthyop assumes constant particle density.</description>
            </parameter>
            <parameter>
                <key>age_max</key>
                <long_name>Maximum age [day]</long_name>
                <value>3.0</value>
                <format>float</format>
                <default>3.0</default>
                <description>Maximum age [day] for adding buoyancy effect to the particle. If the growth process is activated (see  Biology/Growth), this parameter is ignored by the application and the buoyancy only operates during the egg stage.</description>
            </parameter>
            <parameter>
                <key>salinity_field</key>
                <long_name>Salinity variable name</long_name>
                <value>sal</value>
                <default>salt</default>
                <description>The name of the salinity variable (case sensitive) in the hydrodynamic dataset.</description>
            </parameter>
            <parameter>
                <key>temperature_field</key>
                <long_name>Temperature variable name</long_name>
                <value>temp</value>
                <default>temp</default>
                <description>The name of the temperature variable (case sensitive) in the hydrodynamic dataset.</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.BuoyancyAction</value>
                <default>org.previmer.ichthyop.action.BuoyancyAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>normal</value>
                <default>normal</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.migration</key>
        <description>Block of options to control the Diel Vertical Migration (DVM) process of larvae. Only operate for 3D simulation. We impose deterministic pattern in which organisms reside at different depths at daytime and night-time. User can choose the daytime depth and the night-time depth, in meters. If the growth procedure is activated then the DVM operates during the larvae stages (yolk-sac and feeding larva). If not it operates after a “minimum age”. Setting the daytime depth equal to the night-time depth, the pattern forces the motion of particles at a constant depth.</description>
        <tree_path>Advanced/Transport/Vertical migration</tree_path>
        <enabled>false</enabled>
        <parameters>
            <parameter>
                <key>daytime_depth</key>
                <long_name>Depth at daytime [meter]</long_name>
                <value>-30</value>
                <default>-30</default>
                <format>float</format>
                <description>Set the depth [meter] of the particle during daytime. Daytime period starts at sunrise and ends at sunset. Depth is negative number, but the application will automatically convert positive values multiplying by -1. You can set daytime depth = nightime depth to force motion of particle at constant depth.</description>
            </parameter>
            <parameter>
                <key>nighttime_depth</key>
                <long_name>Depth at nighttime [meter]</long_name>
                <value>-10</value>
                <default>-10</default>
                <format>float</format>
                <description>Set the depth [meter] of the particle during nighttime. Nighttime. period starts at sunset and ends at sunrise. Depth is negative number, but the application will automatically convert positive values multiplying by -1. You can set daytime depth = nightime depth to force motion of particle at constant depth.</description>
            </parameter>
            <parameter>
                <key>sunrise</key>
                <long_name>Hour of sunrise [HH:mm]</long_name>
                <value>07:00</value>
                <format>hour</format>
                <default>07:00</default>
                <description>Hour of sunrise [HH:mm], 24 hours format. Make sure that sunrise occurs earlier than sunset.</description>
            </parameter>
            <parameter>
                <key>sunset</key>
                <long_name>Hour of sunset [HH:mm]</long_name>
                <value>19:00</value>
                <default>19:00</default>
                <format>hour</format>
                <description>Hour of sunset HH:mm, 24 hours format. Make sure that sunset occurs later than sunrise.</description>
            </parameter>
            <parameter>
                <key>age_min</key>
                <long_name>Minimum age [day]</long_name>
                <value>3.5</value>
                <default>3.5</default>
                <format>float</format>
                <description>If the growth procedure is activated (See biology section) then the DVM operates during the larvae stages (yolk-sac and feeding larva) and this parameter is ignored by the application. If not migration only operates after this minimum age [day].</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.MigrationAction</value>
                <default>org.previmer.ichthyop.action.MigrationAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>normal</value>
                <default>normal</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.wind</key>
        <tree_path>Advanced/Transport/Wind drift</tree_path>
        <enabled>false</enabled>
        <description>Block of options to implement particle drift due to sea surface wind. The application is not able yet to read any realistic wind datasets. You will have to build your own wind scenarii, providing parameters such as wind direction and intensity, windage, etc. in a separate textfile. For 2D simulations, every particle is exposed to surface wind. For 3D simulations, the application only applies wind drift to close-surface particles (technically, particles that reach the top grid level). First time you enable the wind action, do not forget to create a new wind file (the filename is preset but the file may not exist yet on your disk).</description>
        <parameters>
            <parameter>
                <key>wind_file</key>
                <long_name>Wind scenario file</long_name>
                <value>cfg/iroise_wind-scenario.txt</value>
                <default>cfg/my_wind-scenario.txt</default>
                <format>textfile</format>
                <template>wind-iroise.txt</template>
                <description>Select an existing wind scenario (*.txt) or create a new one. Relative pathnames are supported (e.g 'cfg/wind_scenario1.xml' or '../wind_scenario2.xml' etc.).</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <format>class</format>
                <value>org.previmer.ichthyop.action.WindAction</value>
                <default>org.previmer.ichthyop.action.WindAction</default>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
                <value>normal</value>
                <default>normal</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
            </parameter>
        </parameters>
    </block>
    <block type="option">
        <key>release.schedule</key>
        <description>Block of options to control multi-release events. In most cases, you do not need to define any release schedule, and all the particles are released at the beginning of the simulation (defined in the time section). This option affects the duration of the simulation. Simulation duration is calculated as follow: duration between initial_time and last_release_event plus transport_duration. This ensures that the last released particle will at least be transported for transport_duration. A particle whose age exceeds the duration of transport can as well keep drifting or being “killed” with death cause "old", depending on the value of time section parameter keep_drifting"</description>
        <tree_path>Advanced/Release/Schedule</tree_path>
        <parameters>
            <parameter>
                <key>is_enabled</key>
                <long_name>Use release schedule</long_name>
                <value>false</value>
                <format>boolean</format>
                <default>false</default>
                <description>Activate or deactivate the release schedule. If TRUE particles are released according to this release schedule. If FALSE all the particles are relased at the beginning of the simulation (defined in the time section)</description>
            </parameter>
            <parameter>
                <key>events</key>
                <long_name>Release event(s)</long_name>
                <value>"year 2010 month 05 day 13 at 10:00" "year 2010 month 05 day 13 at 18:00"</value>
                <default />
                <format>list</format>
                <description>Set the dates [year #### month ## day ## at HH:mm] of the release events. You can define as much events as necessary. Just make sure that: 1. the first release events does not occur before the beginning of the simulation, 2. events are defined in chronological order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="release">
        <key>release.zone</key>
        <tree_path>Advanced/Release/From zones</tree_path>
        <description>Block of options for releasing particles within pre-defined geographical zones. This release mode adds a "zone" variable in the NetCDF output file. First time you enable the zone release, do not forget to create a new zone file (the filename is preset but the file may not exist yet on your disk).</description>
        <enabled>false</enabled>
        <parameters>
            <parameter>
                <key>number_particles</key>
                <long_name>Number of particles</long_name>
                <value>1000</value>
                <default>1000</default>
                <format>integer</format>
                <description>Number of particles released in the zones. The application randomly releases the particles within the zones in order to ensure a homogeneous distribution (= constant concentration of particles among the zones). The downside is that you do not control the number of particles released per zone. If several release events are defined (see section release schedule), this parameter becomes the number of particles released in the zones per release event. It means the application will total number_particles_released_in_zones * number_release_events particles.</description>
            </parameter>
            <parameter>
                <key>zone_file</key>
                <long_name>Zone file</long_name>
                <value>cfg/iroise_zones.xml</value>
                <default>cfg/my_zones.xml</default>
                <format>zonefile</format>
                <template>zone-iroise.xml</template>
                <description>Select an existing zone file (*.xml) or create a new one. Relative pathnames are supported (e.g 'cfg/my_zones1.xml' or '../my_zones2.xml' etc.). The application only loads release zones from the file and ignores the other types of zone (recruitment zone for instance).</description>
            </parameter>
            <parameter hidden="true">
                <key>zone_tracker</key>
                <long_name>Track zones</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "zone" variable in the NetCDF output file. Setting to false does not guarantee the "zone" variable will not be recorded in the NetCDF output file because it migt be required by another module (Recruitment for instance).</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.release.ZoneRelease</value>
                <default>org.previmer.ichthyop.release.ZoneRelease</default>
                <format>class</format>
                <description>The Java class called by the application to implement this release process.</description>
            </parameter>
        </parameters>
    </block>
    <block type="release">
        <key>release.patches</key>
        <tree_path>Advanced/Release/Patches in zones</tree_path>
        <enabled>false</enabled>
        <description>Block of options for releasing patches of particles within pre-defined geographical zones. It is equivalent to the zone release but instead of releasing single particles, it does release patches of particles. To make a patch, the application release a single particle and then aggregates some particles around the single particle. You can specify the number of patches, the number of particles within a patch and the radius and the thickness of the patches. First time you enable the patches release, do not forget to create a new zone file (the filename is preset but the file may not exist yet on your disk).</description>
        <parameters>
            <parameter>
                <key>number_patches</key>
                <long_name>Number of patches</long_name>
                <value>10</value>
                <default>10</default>
                <format>integer</format>
                <description>Number of patches released in the zones. The application randomly releases the patches within the zones in order to ensure a homogeneous distribution of patches among the zones. The downside is that you do not control the number of patches released per zone.</description>
            </parameter>
            <parameter>
                <key>number_agregated</key>
                <long_name>Number of particles per patch</long_name>
                <value>100</value>
                <default>100</default>
                <format>integer</format>
                <description>The number of aggregated particles in a patch.</description>
            </parameter>
            <parameter>
                <key>radius_patch</key>
                <long_name>Radius of the patch [meter]</long_name>
                <value>2000.0</value>
                <default>5000.0</default>
                <format>float</format>
                <description>Radius of the patch [meter]. If you release large patches within small zones, it is very likely that patches will overlap.</description>
            </parameter>
            <parameter>
                <key>thickness_patch</key>
                <long_name>Thickness of the patch [meter]</long_name>
                <value>2.0</value>
                <default>10.0</default>
                <format>float</format>
                <description>Thickness of the patch [meter]. This parameter is ignored for 2D simulations.</description>
            </parameter>
            <parameter>
                <key>zone_file</key>
                <long_name>Zone file</long_name>
                <value>cfg/iroise_zones.xml</value>
                <default>cfg/my_zones.xml</default>
                <format>zonefile</format>
                <template>zone-iroise.xml</template>
                <description>Select an existing zone file (*.xml) or create a new one. Relative pathnames are supported (e.g 'cfg/my_zones1.xml' or '../my_zones2.xml' etc.). The application only loads release zones from the file and ignores the other types of zone recruitment zone for instance).</description>
            </parameter>
            <parameter hidden="true">
                <key>zone_tracker</key>
                <long_name>Track zones</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "zone" variable in the NetCDF output file. Setting to false does not guarantee the "zone" variable will not be recorded in the NetCDF output file because it migt be required by another module (Recruitment for instance).</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <format>class</format>
                <value>org.previmer.ichthyop.release.PatchyRelease</value>
                <default>org.previmer.ichthyop.release.PatchyRelease</default>
                <description>The Java class called by the application to implement this release process.</description>
            </parameter>
        </parameters>
    </block>
    <block type="release">
        <key>release.txtfile</key>
        <tree_path>Advanced/Release/Drifters from text file</tree_path>
        <description>Block of options for releasing particles with initial coordinates pre-defined in a textfile. The application reads the position of the particles in the text file and release them at time "Beginning of simulation". If the Release schedule is activated, the application will repeatedly release the whole bunch of drifters (for each release event).</description>
        <enabled>false</enabled>
        <parameters>
            <parameter>
                <key>txtfile</key>
                <long_name>Drifter file</long_name>
                <value>cfg/iroise_drifters.txt</value>
                <default>cfg/my_drifters.txt</default>
                <format>textfile</format>
                <template>drifter-iroise.txt</template>
                <description>Select an existing drifter textfile (*.txt) or create a new one. Relative pathnames are supported (e.g 'cfg/my_drifters1.xml' or '../my_drifters2.xml' etc.).</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <format>class</format>
                <value>org.previmer.ichthyop.release.TxtFileRelease</value>
                <default>org.previmer.ichthyop.release.TxtFileRelease</default>
                <description>The Java class called by the application to implement this release process.</description>
            </parameter>
        </parameters>
    </block>
    <block type="release">
        <key>release.ncfile</key>
        <tree_path>Advanced/Release/Restart mode</tree_path>
        <description>Block of options for releasing particles with initial coordinates read in an Ichthyop NetCDF output file. The application interpolates the position of the particle in the NetCDF file at time “Beginning of the simulation” or for every "Release event" if the release schedule is activated. It also reads the status of the particle. If the particle had already die, the application releases the particle but it is immediately disabled (not transported). Make sure the time “Beginning of simulation” (or the "Release events") is contained inside the NetCDF file, otherwise the application will crash.</description>
        <enabled>false</enabled>
        <parameters>
            <parameter>
                <key>ncfile</key>
                <long_name>NetCDF file</long_name>
                <value />
                <default />
                <format>file</format>
                <description>Select an existing Ichthyop NetCDF output file. Relative pathnames are supported (e.g 'output/ichthyop-run201006291600.nc' or '../ichthyop-run201006291601.nc' etc.).</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <format>class</format>
                <value>org.previmer.ichthyop.release.NcFileRelease</value>
                <description>The Java class called by the application to implement this release process.</description>
            </parameter>
        </parameters>
    </block>
    <block type="release">
        <key>release.stain</key>
        <tree_path>Main/Release stain</tree_path>
        <description>Block of options for releasing a "stain" of particles aroung a given location.</description>
        <enabled>true</enabled>
        <parameters>
            <parameter>
                <key>number_particles</key>
                <long_name>Number of particles</long_name>
                <value>1000</value>
                <default>1000</default>
                <format>integer</format>
                <description>Number of particles released in the stain. If several release events are defined (see section release schedule), this parameter becomes the number of particles released in the stain per release event. It means the application will total number_particles_released_in_zones * number_release_events particles.</description>
            </parameter>
            <parameter>
                <key>lon_stain</key>
                <long_name>Longitude [East degree]</long_name>
                <value>-5.5</value>
                <default>-5.5</default>
                <format>lonlat</format>
                <description>Longitude [East degree] of the stain. You can change the coordinate format when editing the value.</description>
            </parameter>
            <parameter>
                <key>lat_stain</key>
                <long_name>Latitude [North degree]</long_name>
                <value>48.4</value>
                <default>48.4</default>
                <format>lonlat</format>
                <description>Latitude [North degree] of the stain. You can change the coordinate format when editing the value.</description>
            </parameter>
            <parameter>
                <key>depth_stain</key>
                <long_name>Depth [meter]</long_name>
                <value>-20.0</value>
                <default>-20.0</default>
                <format>float</format>
                <description>Depth [meter] of the stain. The parameter is ignored for 2D simulation. Positive depth is automatically converted by the application (depth = -depth)</description>
            </parameter>
            <parameter>
                <key>radius_stain</key>
                <long_name>Radius of the stain [meter]</long_name>
                <value>2000.0</value>
                <default>2000.0</default>
                <format>float</format>
                <description>Radius [meter] of the stain. Particles are randomly released (for homogeneous distribution) within the circle defined by this radius.</description>
            </parameter>
            <parameter>
                <key>thickness_stain</key>
                <long_name>Thickness of the stain [meter]</long_name>
                <value>10.0</value>
                <default>10.0</default>
                <format>float</format>
                <description>Thickness [meter] of the stain. This parameter is ignored for 2D simulation. Particles are randomly released within the layer [depth_stain - thickness / 2; depth_stain + thickness / 2]</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <format>class</format>
                <value>org.previmer.ichthyop.release.StainRelease</value>
                <default>org.previmer.ichthyop.release.StainRelease</default>
                <description>The Java class called by the application to implement this release process.</description>
            </parameter>
        </parameters>
    </block>
    <block type="option">
        <key>app.particle_length</key>
        <tree_path>Advanced/Biology/Early-life stages</tree_path>
        <description>Block of options for setting up particle's early-life stages. The pre-defined early life stages are egg, yolk-sac larva and feeding larva. Particles change stages at pre-defined length thresholds that can be adjusted in this block.</description>
        <parameters>
            <parameter>
                <key>initial_length</key>
                <long_name>Initial length [millimeter]</long_name>
                <value>0.025</value>
                <default>0.025</default>
                <format>float</format>
                <description>Initial length [millimeter] of the egg.</description>
            </parameter>
            <parameter>
                <key>hatch_length</key>
                <long_name>Hatch length [millimeter]</long_name>
                <value>2.8</value>
                <default>2.8</default>
                <format>float</format>
                <description>Threshold length [millimeter] between egg and yolk-sac larva.</description>
            </parameter>
            <parameter>
                <key>yolk2feeding_length</key>
                <long_name>Yolk-sac to feeding larva threshold [millimeter]</long_name>
                <value>4.5</value>
                <default>4.5</default>
                <format>float</format>
                <description>Threshold length [millimeter] between yolk-sac larva and feeding larva.</description>
            </parameter>
        </parameters>
    </block>
        <block type="action">
        <key>action.lethal_temp</key>
        <tree_path>Biology/Lethal temperature</tree_path>
        <enabled>false</enabled>
        <description>Block of option for setting up the lower lethal water temperature for the particles. The tool distinguishes between eggs and larvae lethal temperatures when the growth process is activated.</description>
        <parameters>
            <parameter>
                <key>cold_lethal_temperature_egg</key>
                <long_name>Cold lethal temperature (egg) [Celsius degree]</long_name>
                <value>14.0</value>
                <default>14.0</default>
                <format>float</format>
                <description>Lower lethal water temperature [Celsius degree] for the particles. If the growth process is active, this parameter only affects particles at egg stage. This parameter is ignored when a temperature file is provided.</description>
            </parameter>
            <parameter>
                <key>hot_lethal_temperature_egg</key>
                <long_name>Hot lethal temperature (egg) [Celsius degree]</long_name>
                <value>22.0</value>
                <default>22.0</default>
                <format>float</format>
                <description>Higher lethal water temperature [Celsius degree] for the particles. If the growth process is active, this parameter only affects particles at egg stage. This parameter is ignored when a temperature file is provided.</description>
            </parameter>
            <parameter>
                <key>cold_lethal_temperature_larva</key>
                <long_name>Cold lethal temperature (larva) [Celsius degree]</long_name>
                <value>12.0</value>
                <default>12.0</default>
                <format>float</format>
                <description>Lower lethal water temperature [Celsius degree] for particles at larva stage (yolk-sac and feeding larva). This parameter is ignored by the application when the growth process is idle or when a temperature file is provided.</description>
            </parameter>
            <parameter>
                <key>hot_lethal_temperature_larva</key>
                <long_name>Hot lethal temperature (larva) [Celsius degree]</long_name>
                <value>22.0</value>
                <default>22.0</default>
                <format>float</format>
                <description>Higher lethal water temperature [Celsius degree] for particles at larva stage (yolk-sac and feeding larva). This parameter is ignored by the application when the growth process is idle or when a temperature file is provided.</description>
            </parameter>
            <parameter>
                <key>lethal_temp_file</key>
                <long_name>Lethal temperature file</long_name>
                <value />
                <format>textfile</format>
                <default />
                <template>lethal_temperatures.csv</template>
                <description>Lethal temperatures as an age function. The parameter is the pathname of CSV file (semicolon separator) that contains three columns. Headers Time(hour);Cold temp;Hot temp(celsius). Click on new, type a new file name and Ichthyop will generate a CSV template. If this parameter is left void, ichthyop assumes constant lethal temperatures.</description>
            </parameter>
            <parameter>
                <key>temperature_field</key>
                <long_name>Temperature variable name</long_name>
                <value>temp</value>
                <default>temp</default>
                <description>The name of the temperature variable (case sensitive) in the hydrodynamic dataset.</description>
            </parameter>
            <parameter hidden="true">
                <key>temp_tracker</key>
                <long_name>Track temperature</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a temperature variable in the NetCDF output file. Setting to false does not guarantee the temperature variable will not be recorded in the NetCDF output file because it migt be required by another module.</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.LethalTempAction</value>
                <default>org.previmer.ichthyop.action.LethalTempAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>low</value>
                <default>low</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.growth</key>
        <tree_path>Advanced/Biology/Growth</tree_path>
        <enabled>false</enabled>
        <description>Block of options for setting up the growth model. It simulates the growth in length of particles as a function of water temperature. Length increases linearly with time, at a growth rate that is a linear function of temperature: length(t + dt) = length(t) + (growth_coeff1 + growth_coeff2 * max(temp, threshold_temp)) * dt</description>
        <parameters>
            <parameter>
                <key>coeff1</key>
                <long_name>Growth coefficient 1</long_name>
                <value>0.02</value>
                <default>0.02</default>
                <format>float</format>
                <description>Value of the first coefficient of the growth function (detailed in the block description)</description>
            </parameter>
            <parameter>
                <key>coeff2</key>
                <long_name>Growth coefficient 2</long_name>
                <value>0.03</value>
                <default>0.03</default>
                <format>float</format>
                <description>Value of the second coefficient of the growth function (detailed in the block description)</description>
            </parameter>
            <parameter>
                <key>threshold_temp</key>
                <long_name>Threshold temperature [Celsius degree]</long_name>
                <value>10.0</value>
                <default>10.0</default>
                <format>float</format>
                <description>Threshold temperature [Celsius degree] for the sea water. It ensures that the particles keep growing with a minimum rate, though they are facing colder sea water.</description>
            </parameter>
            <parameter>
                <key>temperature_field</key>
                <long_name>Temperature variable name</long_name>
                <value>temp</value>
                <default>temp</default>
                <description>The name of the temperature variable (case sensitive) in the hydrodynamic dataset.</description>
            </parameter>
            <parameter hidden="true">
                <key>length_tracker</key>
                <long_name>Track particle length</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "length" variable in the NetCDF output file.</description>
            </parameter>
            <parameter hidden="true">
                <key>stage_tracker</key>
                <long_name>Track particle biological stage</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "stage" variable in the NetCDF output file.</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.LinearGrowthAction</value>
                <default>org.previmer.ichthyop.action.LinearGrowthAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>low</value>
                <default>low</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.recruitment.zone</key>
        <tree_path>Advanced/Biology/Recruitment/In zones</tree_path>
        <enabled>false</enabled>
        <description>Block of options for defining some recruitment criterions and recruitment zones, in order to study, for instance, the recruitment success of a particular geographic area. First time you enable the recruitment process, do not forget to create a new zone file (the filename is preset but the file may not exist yet on your disk).</description>
        <parameters>
            <parameter>
                <key>criterion</key>
                <long_name>Recruitment criterion</long_name>
                <value>Age criterion</value>
                <default>Age criterion</default>
                <format>combo</format>
                <accepted>Age criterion</accepted>
                <accepted>Length criterion</accepted>
                <default>Age criterion</default>
                <description>Select the type of criterion the application should use to check wheter a particle has been recruited or not. When the growth process is idle, you must use the age based criterion (otherwise application will crash). When growth is taken into account the criterion might also be a minimal length threshold.</description>
            </parameter>
            <parameter>
                <key>limit_age</key>
                <long_name>Recruitment limit age [day]</long_name>
                <value>7.0</value>
                <default>7.0</default>
                <format>float</format>
                <description>A particle must be "older" than the specified age [day] to be considered as recruitable. This parameter is ignored if the recruitment criterion is based on the particle length.</description>
            </parameter>
            <parameter>
                <key>limit_length</key>
                <long_name>Recruitment limit length [millimeter]</long_name>
                <value>6.0</value>
                <default>6.0</default>
                <format>float</format>
                <description>A particle must be "bigger" than the specified length [millimeter] to be considered as recruitable. This parameter is ignored if the recruitment criterion is based on the particle age. Only use this criterion if the growth model is activated.</description>
            </parameter>
            <parameter>
                <key>duration_min</key>
                <long_name>Minimal duration in recruitment zone [day]</long_name>
                <value>0.0</value>
                <default>0.0</default>
                <format>float</format>
                <description>Minimal duration [day] a particle has to spend in a recruitment area to be considered as recruitable.</description>
            </parameter>
            <parameter>
                <key>stop_moving</key>
                <long_name>Stop moving when recruited</long_name>
                <value>false</value>
                <default>false</default>
                <format>boolean</format>
                <description>Force a particle to remain where it is as soon as it is recruited. If activated, the particle could not be recruited in any other recruitment area. On the contrary, a particle that does not stop moving when recruited can keep drifting and being recruited in others recruitment areas, as long as the recruitement conditions are fulfilled.</description>
            </parameter>
            <parameter>
                <key>zone_file</key>
                <long_name>Zone file</long_name>
                <value>cfg/iroise_zones.xml</value>
                <default>cfg/my_zones.xml</default>
                <format>zonefile</format>
                <template>zone-iroise.xml</template>
                <description>Select an existing zone file (*.xml) or create a new one. Relative pathnames are supported (e.g 'cfg/my_zones1.xml' or '../my_zones2.xml' etc.). The application only loads recruitment zones from the file and ignores the other types of zone (release zone for instance).</description>
            </parameter>
            <parameter hidden="true">
                <key>recruited_tracker</key>
                <long_name>Track recruitment status</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "recruited" variable in the NetCDF output file.</description>
            </parameter>
            <parameter hidden="true">
                <key>zone_tracker</key>
                <long_name>Track zones</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "zone" variable in the NetCDF output file. Setting to false does not guarantee the "zone" variable will not be recorded in the NetCDF output file because it migt be required by another module (Zone release for instance).</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.RecruitmentZoneAction</value>
                <default>org.previmer.ichthyop.action.RecruitmentZoneAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>highest</value>
                <default>highest</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
    <block type="action">
        <key>action.recruitment.stain</key>
        <tree_path>Advanced/Biology/Recruitment/In stain</tree_path>
        <enabled>false</enabled>
        <description>Block of options for defining some recruitment criterions and a recruitment stain, in order to study, for instance, the recruitment success of a particular geographic area.</description>
        <parameters>
            <parameter>
                <key>criterion</key>
                <long_name>Recruitment criterion</long_name>
                <value>Age criterion</value>
                <default>Age criterion</default>
                <format>combo</format>
                <accepted>Age criterion</accepted>
                <accepted>Length criterion</accepted>
                <default>Age criterion</default>
                <description>Select the type of criterion the application should use to check wheter a particle has been recruited or not. When the growth process is idle, you must use the age based criterion (otherwise application will crash). When growth is taken into account the criterion might also be a minimal length threshold.</description>
            </parameter>
            <parameter>
                <key>limit_age</key>
                <long_name>Recruitment limit age [day]</long_name>
                <value>7.0</value>
                <default>7.0</default>
                <format>float</format>
                <description>A particle must be "older" than the specified age [day] to be considered as recruitable. This parameter is ignored if the recruitment criterion is based on the particle length.</description>
            </parameter>
            <parameter>
                <key>limit_length</key>
                <long_name>Recruitment limit length [millimeter]</long_name>
                <value>6.0</value>
                <default>6.0</default>
                <format>float</format>
                <description>A particle must be "bigger" than the specified length [millimeter] to be considered as recruitable. This parameter is ignored if the recruitment criterion is based on the particle age. Only use this criterion if the growth model is activated.</description>
            </parameter>
            <parameter>
                <key>stop_moving</key>
                <long_name>Stop moving when recruited</long_name>
                <value>false</value>
                <default>false</default>
                <format>boolean</format>
                <description>Force a particle to remain where it is as soon as it is recruited. If activated, the particle could not be recruited in any other recruitment area. On the contrary, a particle that does not stop moving when recruited can keep drifting and being recruited in others recruitment areas, as long as the recruitement conditions are fulfilled.</description>
            </parameter>
            <parameter>
                <key>lon_stain</key>
                <long_name>Longitude [East degree]</long_name>
                <value>-5.5</value>
                <default>-5.5</default>
                <format>lonlat</format>
                <description>Longitude [East degree] of the stain. You can change the coordinate format when editing the value.</description>
            </parameter>
            <parameter>
                <key>lat_stain</key>
                <long_name>Latitude [North degree]</long_name>
                <value>48.4</value>
                <default>48.4</default>
                <format>lonlat</format>
                <description>Latitude [North degree] of the stain. You can change the coordinate format when editing the value.</description>
            </parameter>
            <parameter>
                <key>depth_stain</key>
                <long_name>Depth [meter]</long_name>
                <value>-20.0</value>
                <default>-20.0</default>
                <format>float</format>
                <description>Depth [meter] of the stain. The parameter is ignored for 2D simulation. Positive depth is automatically converted by the application (depth = -depth)</description>
            </parameter>
            <parameter>
                <key>radius_stain</key>
                <long_name>Radius of the stain [meter]</long_name>
                <value>2000.0</value>
                <default>2000.0</default>
                <format>float</format>
                <description>Radius [meter] of the stain. Particles are randomly released (for homogeneous distribution) within the circle defined by this radius.</description>
            </parameter>
            <parameter>
                <key>thickness_stain</key>
                <long_name>Thickness of the stain [meter]</long_name>
                <value>10.0</value>
                <default>10.0</default>
                <format>float</format>
                <description>Thickness [meter] of the stain. This parameter is ignored for 2D simulation. Particles are randomly released within the layer [depth_stain - thickness / 2; depth_stain + thickness / 2]</description>
            </parameter>
            <parameter hidden="true">
                <key>recruited_tracker</key>
                <long_name>Track recruitment status</long_name>
                <value>true</value>
                <default>true</default>
                <format>boolean</format>
                <description>If true the application adds a "recruited" variable in the NetCDF output file.</description>
            </parameter>
            <parameter hidden="true">
                <key>class_name</key>
                <long_name>Java Class file</long_name>
                <value>org.previmer.ichthyop.action.RecruitmentStainAction</value>
                <default>org.previmer.ichthyop.action.RecruitmentStainAction</default>
                <format>class</format>
                <description>The Java class called by the application to implement this action.</description>
            </parameter>
            <parameter hidden="true">
                <key>priority</key>
                <long_name>priority</long_name>
                <value>highest</value>
                <default>highest</default>
                <format>combo</format>
                <accepted>lowest</accepted>
                <accepted>low</accepted>
                <accepted>normal</accepted>
                <accepted>high</accepted>
                <accepted>highest</accepted>
                <description>Level of priority of the action (comparatively to other actions). Each time step, a high priority action will be called by the application before than a low priority action. Actions with same level of priority will be called without any specific order.</description>
            </parameter>
        </parameters>
    </block>
</icstructure>