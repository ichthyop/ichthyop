# 
# 
# ICHTHYOP, a Lagrangian tool for simulating ichthyoplankton dynamics
# http://www.ichthyop.org
# 
# Copyright (C) IRD (Institut de Recherce pour le Developpement) 2006-2020
# http://www.ird.fr
# 
# Main developper: Philippe VERLEY (philippe.verley@ird.fr), Nicolas Barrier (nicolas.barrier@ird.fr)
# Contributors (alphabetically sorted):
# Gwendoline ANDRES, Sylvain BONHOMMEAU, Bruno BLANKE, Timothée BROCHIER,
# Christophe HOURDIN, Mariem JELASSI, David KAPLAN, Fabrice LECORNU,
# Christophe LETT, Christian MULLON, Carolina PARADA, Pierrick PENVEN,
# Stephane POUS, Nathan PUTMAN.
# 
# Ichthyop is a free Java tool designed to study the effects of physical and
# biological factors on ichthyoplankton dynamics. It incorporates the most
# important processes involved in fish early life: spawning, movement, growth,
# mortality and recruitment. The tool uses as input time series of velocity,
# temperature and salinity fields archived from oceanic models such as NEMO,
# ROMS, MARS or SYMPHONIE. It runs with a user-friendly graphic interface and
# generates output files that can be post-processed easily using graphic and
# statistical software. 
# 
# To cite Ichthyop, please refer to Lett et al. 2008
# A Lagrangian Tool for Modelling Ichthyoplankton Dynamics
# Environmental Modelling & Software 23, no. 9 (September 2008) 1210-1214
# doi:10.1016/j.envsoft.2008.02.005
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 3 of the License). For a full 
# description, see the LICENSE file.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# 
# 

helpMenu.text = Help
mappingMenu.text=Mapping
animationMenu.text=Animation
simulationMenu.text=Simulation
configurationMenu.text=Configuration
#
# @Action resources
#
showAboutBox.Action.text = &About...
showAboutBox.Action.icon = images/ico32/menu-about.png
showAboutBox.Action.shortDescription = Show the application's information dialog
#
openConfigurationFile.Action.text = &Open...
openConfigurationFile.Action.icon = images/ico32/menu-open.png
openConfigurationFile.Action.shortDescription = Open configuration file
openConfigurationFile.msg.opened = ${configuration.text} Opened
openConfigurationFile.msg.error = ${configuration.text} {Open} Failed to load configuration file
#
updateConfigurationFile.cfgFile = Configuration file
updateConfigurationFile.cfgVersion = Version of your configuration file
updateConfigurationFile.appVersion = Ichthyop current version
updateConfigurationFile.requestUpgrade = Would you like Ichthyop to upgrade your configuration file ?
updateConfigurationFile.uptodate = {Configuration} Configuration file updated to version
updateConfigurationFile.backup = {Configuration} A copy of the original configuration file has been saved as
updateConfigurationFile.inconsistency = Configuration file version is more recent than ichthyop version... Please update ichthyop.
#
closeConfigurationFile.Action.text = Close
closeConfigurationFile.Action.icon = images/ico32/menu-close.png
closeConfigurationFile.Action.shortDescription = Close the configuration file
closeConfigurationFile.msg.finished = ${configuration.text} Closed
#
newConfigurationFile.Action.text = &New...
newConfigurationFile.Action.icon = images/ico32/menu-new.png
newConfigurationFile.Action.shortDescription = Create a new configuration file
newConfigurationFile.Action.enabled = false
#
editConfigurationFile.Action.text = &Edit...
editConfigurationFile.Action.icon = images/ico32/menu-edit.png
editConfigurationFile.Action.shortDescription = Edit the configuration file
editConfigurationFile.Action.enabled = false
#
saveConfigurationFile.Action.text = &Save
saveConfigurationFile.Action.icon = images/ico32/save.png
saveConfigurationFile.Action.shortDescription = Save the configuration file
saveConfigurationFile.Action.enabled = false
saveConfigurationFile.msg.finished = ${configuration.text} Saved
#
saveAsConfigurationFile.Action.text = Save as
saveAsConfigurationFile.Action.icon = images/ico32/save-as.png
saveAsConfigurationFile.Action.shortDescription = Save as the configuration file
saveAsConfigurationFile.Action.enabled = false
saveAsConfigurationFile.msg.failed = ${saveAsConfigurationFile.msg.prefix} Failed to save file
saveAsConfigurationFile.msg.different = Select a different file name please
saveAsConfigurationFile.msg.overwrite = already exists. Overwrite it ?
saveAsConfigurationFile.msg.saved = saved as
saveAsConfigurationFile.msg.prefix = ${configuration.text} {Save as}
#
simulationRun.Action.text = ${simulationRun.Action.text.start}
simulationRun.Action.text.start = Run simulation
simulationRun.Action.text.stop = Stop simulation
simulationRun.Action.icon = ${simulationRun.Action.icon.play}
simulationRun.Action.icon.play = images/ico32/run-play.png
simulationRun.Action.icon.stop = images/ico32/run-stop.png
simulationRun.Action.shortDescription = Start/Stop the simulation
simulationRun.Action.enabled = false
simulationRun.msg.started = ===== Simulation started =====
simulationRun.msg.interrupted = ===== Simulation interrupted =====
simulationRun.msg.simulation = ${simulation.text} Run
simulationRun.msg.time = Time
simulationRun.msg.completed = ===== Simulation completed =====
simulationRun.msg.init.start = ${simulation.text} Initialising...
simulationRun.msg.init.ok = ${simulation.text} Initialisation [OK]
simulationRun.msg.init.failed = ${simulation.text} Initialisation failed
#
exitApplication.Action.text = E&xit
exitApplication.Action.icon = images/ico32/menu-exit.png
exitApplication.Action.shortDescription = Exit the application
#
next.Action.text = ${null}
next.Action.icon = images/ico32/go-next.png
next.Action.shortDescription = Go to next image. Key Right.
next.Action.enabled = false
#
previous.Action.text = ${null}
previous.Action.icon = images/ico32/go-previous.png
previous.Action.shortDescription = Go to previous image. Key left.
previous.Action.enabled = false
#
first.Action.text = ${null}
first.Action.icon = images/ico32/go-first.png
first.Action.shortDescription = Go to first image
first.Action.enabled = false
#
last.Action.text = ${null}
last.Action.icon = images/ico32/go-last.png
last.Action.shortDescription = Go to last image
last.Action.enabled = false
#
animation.msg.started = ${animation.text} Animation started...
animation.msg.stopped = ${animation.text} Animation stopped.
animation.msg.paused = ${animation.text} Animation paused.
animation.msg.resumed = ${animation.text} Animation resumed.
animation.msg.tooFast = ${animation.text} Cannot handle animation speed.
#
stopAnimation.Action.text = Stop animation
stopAnimation.Action.shortDescription = Stop the animation
stopAnimation.Action.icon = images/ico32/icon-stop.png
#
startAnimationFW.Action.text = Start animation (forward)
startAnimationFW.Action.shortDescription = Play the animation going forward in time
startAnimationFW.Action.icon = images/ico32/icon-play-fw.png
#
startAnimationBW.Action.text = Start animation (backward)
startAnimationBW.Action.shortDescription = Play the animation going  backward in time
startAnimationBW.Action.icon = images/ico32/icon-play-bw.png
#
openFolderAnimation.Action.text = Open maps
openFolderAnimation.Action.shortDescription = Open the folder containing the maps
openFolderAnimation.Action.icon = images/ico32/open-animation.png
openFolderAnimation.dialog.title = Select folder
openFolderAnimation.msg.failed = ${animation.text} No PNG pictures found in folder
openFolderAnimation.msg.opened = ${animation.text} Opened folder
#
simulationRecord.Action.text = Record
simulationRecord.Action.shortDescription = Record the run for visual replay.
simulationRecord.Action.icon = images/ico32/run-record.png
#
deleteMaps.Action.text = Delete
deleteMaps.Action.shortDescription = Delete the maps.
deleteMaps.Action.icon = images/ico32/delete-animation.png
deleteMaps.dialog.title = ${Application.title} - Delete maps
deleteMaps.dialog.msg.part1 = Delete maps from
deleteMaps.dialog.msg.part2 = PNG pictures will be deleted from your computer.
deleteMaps.msg.deleted = pictures deleted.
#
saveasMaps.Action.text = Save as
saveasMaps.Action.shortDescription = Save the maps in a different folder.
saveasMaps.Action.icon = images/ico32/save-animation.png
saveasMaps.msg.launch = ${animation.text} {Save as} Launch dialog
#
createAnimatedGif.Action.text = Animated GIF
createAnimatedGif.Action.icon = images/ico32/film.png
createAnimatedGif.Action.shortDescription = Create an animated GIF from the PNG pictures
createAnimatedGif.msg.start = ${createAnimatedGif.msg.prefix} Creating animated GIF. It might take a while...
createAnimatedGif.msg.succeeded = ${createAnimatedGif.msg.prefix} Created animated GIF
createAnimatedGif.dialog.title = File exits
createAnimatedGif.dialog.overwrite = already exists. Overwrite ?
createAnimatedGif.msg.prefix = ${animation.text} {GIF}
#
previewSimulation.Action.text = Preview
previewSimulation.Action.shortDescription = Rudimentary preview of the simulation area.
previewSimulation.Action.icon = images/ico32/visual-control.png
#
changePath.Action.text = ...
changePath.Action.shortDescription = Change directory
#
createMaps.Action.text = Make maps
createMaps.Action.shortDescription = Generate a serie of pictures with Web Map Service
createMaps.Action.icon = images/ico32/earth.png
createMaps.msg.start = ${mapping.text} Creating maps, please wait...
createMaps.msg.cleanup = ${mapping.text} Cleaned up folder
createMaps.msg.succeeded = maps created [OK]
createMaps.msg.cancelled = ${mapping.text} Cancelled by user
#
cancelMapping.Action.text = Cancel
cancelMapping.Action.shortDescription = Cancel generation of maps
cancelMapping.Action.icon = images/ico32/cancel.png
#
openNcMapping.Action.text = Open NetCDF
openNcMapping.Action.shortDescription = Open an ichthyop output NetCDF file for mapping
openNcMapping.Action.icon = images/ico32/open-nc.png
openNcMapping.msg.opened = ${mapping.text} Opened NetCDF file
#
closeNetCDF.Action.text = Close NetCDF
closeNetCDF.Action.shortDescription = Close the ichthyop output NetCDF file
closeNetCDF.Action.icon = images/ico32/close-folder.png
closeNetCDF.msg.closed = ${mapping.text} Closed NetCDF file
#
browse.Action.text = ${null}
browse.Action.shortDescription = Visit Ichthyop homepage
browse.Action.icon = images/ichthyop_logo_500_bw_3.1.png
browse.msg.openurl = Opening:
browse.msg.no-browser= Found no browser.
#
exportToKMZ.Action.text = Export to KMZ
exportToKMZ.Action.icon = images/ico32/googleearth.png
exportToKMZ.Action.shortDescription = Convert NetCDF output file to KMZ file for visualizing results with GoogleEarth.
exportToKMZ.msg.exporting = ${exportToKMZ.msg.prefix} Converting NetCDF output file to KMZ format. Please wait...
exportToKMZ.msg.compressing = ${exportToKMZ.msg.prefix} Compressing KML file into KMZ. It might take some time...
exportToKMZ.msg.exported = ${exportToKMZ.msg.prefix} Exported KMZ file:
exportToKMZ.msg.prefix = ${mapping.text} {KMZ}
exportToKMZ.msg.cancelled = ${exportToKMZ.msg.prefix} Cancelled by user
#
applyColorbarSettings.Action.text = Apply settings
applyColorbarSettings.Action.icon = images/ico32/ok.png
applyColorbarSettings.Action.shortDescription = Validate the settings for the colorbar
applyColorbarSettings.msg.applied = ${mapping.text} {Colorbar} Applied colorbar settings.
#
autoRangeColorbar.Action.text = Auto range
autoRangeColorbar.Action.icon = images/ico32/range.png
autoRangeColorbar.Action.shortDescription = Suggest relevant range for the colorbar.
autoRangeColorbar.msg.range = ${autoRangeColorbar.msg.prefix} Estimating the range of the colorbar. Might take some time...
autoRangeColorbar.msg.suggested = ${mapping.text} Range suggested
autoRangeColorbar.msg.error = ${autoRangeColorbar.msg.prefix} An error occurred while scanning variable
autoRangeColorbar.msg.cancelled = ${autoRangeColorbar.msg.prefix} Please select a variable first
autoRangeColorbar.msg.prefix = ${mapping.text} {Auto range}
#
# Progress Panel resources
#
preferences.filename = ${Application.preferences.filename}
animationSpeed.toolTipText=Number of frame per second displayed by the animation.
#
# Step titled panels
#
step.Configuration.icon = images/ico32/apply.png
step.Configuration.text = Step 1 : configuration
#
step.Simulation.icon = images/ico32/run-build.png
step.Simulation.text = Step 2 : simulation
#
step.Mapping.icon = images/ico32/mapping.png
step.Mapping.text = Step 3 : mapping
#
step.Animation.icon = images/ico32/tool-animator.png
step.Animation.bgicon = images/ico256/folder-video.png
step.Animation.text = Step 4 : animation
#
lblWMS.text=Server:
pnlWMS.border.title=Web Map Service
lblFolder.text=Simulation maps
#NOI18N
lblFolder.font=DejaVu Sans-Plain-12
#NOI18N
lblCfgFile.font=DejaVu Sans-Plain-12
#NOI18N
lblFramePerSecond.font=DejaVu Sans-Plain-12
lblAnimationSpeed.text=Frame per second:
lblNC.text=Ichthyop output file
#NOI18N
lblNC.font=DejaVu Sans-Plain-12
lblTime.text=Time
#NOI18N
lblTime.font=DejaVu Sans-Plain-12
lblConfiguration.icon = images/ico256/preferences-system.png
lblMapping.icon = images/ico256/mapping.png
lblCfgFile.text=Configuration file
#NOI18N
hyperLinkLogo.rolloverIcon=images/ichthyop_logo_500_3.1.png
#NOI18N
hyperLinkLogo.selectedIcon=images/ichthyop_logo_500_3.1.png
titledPanelSteps.title=Management
titledPanelLogger.title=Information
titledPanelMain.title=Ichthyop
pnlColorBar.border.title=Color bar
jFormattedTextField2.text=jFormattedTextField2
lblVariable.text=Variable
lblMin.text=Minimum
lblMax.text=Maximum
btnColorMin.text=Color
#NOI18N
btnColorMin.icon=images/ico22/fill-color.png
btnColorMax.text=Color
#NOI18N
btnColorMax.icon=images/ico22/fill-color.png
#NOI18N
btnColorMin.foreground=0, 0, 255
#NOI18N
btnColorMax.foreground=255, 0, 0
lblColor.text=Default color
btnColor.msg.apply = ${mapping.text} Set particle default color
pnlColor.border.title=Particle color
#
# Save dialog
#
dialogSave.title = Save before exit
dialogSave.msg.save = Save changes in
#
btnAnimationBW.text=
btnAnimationFW.text=
btnAnimationStop.text=
ckBoxReverseTime.text=Reverse time
#
mapping.text = [Mapping]
animation.text = [Animation]
configuration.text = [Configuration]
simulation.text = [Simulation]
lblMed.text=Medium
#NOI18N
btnColorMed.foreground=254, 254, 254
btnColorMed.text=Color
#NOI18N
btnColorMed.icon=images/ico22/fill-color.png
lblColor1.text=Size (pixel)
btnParticleColor.text=Color
#NOI18N
btnParticleColor.icon=images/ico22/fill-color.png
btnParticleColor.foreground=255, 0, 0
ckBoxDrawGrid.text=Draw dataset grid
