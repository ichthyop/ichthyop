### ROMS grid

```{python}
#| echo: false
#| output: false
import os
import subprocess
cwd = os.getcwd()

fpath = "developer/grid/_static/roms.py"
subprocess.call(["python", fpath], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
```

In this section, the main features of the ROMS grid and the implications in Ichthyop are summarized.

#### Horizontal

The horizontal grid layout of the ROMS model is shown below:

![ROMS staggered grid structure](developer/grid/_static/roms_grid_1.png)

Contrary to NEMO and MARS, the `U` points are located on the *western* face, while velocities are
located on the *southern* faces. However, However, as indicated on the [Wikiroms page](https://www.myroms.org/wiki/Numerical_Solution_Technique), while the `T` interior domain has $(N_y, N_x)$ dimensions,
the `U` domain is $(N_y, N_x - 1)$ points while and `V` domain is $(N_y - 1, N_x)$ points.
Indeed, the first row for V and the first column for U are discarded. Therefore, the structure of the input ROMS grid is
as follows:

![ROMS grid as interpreted by Ichthyop](developer/grid/_static/ichthyop_grid_roms.svg)


##### Land-sea mask

![Land-sea masking for ROMS grid](developer/grid/_static/land_sea_mask_roms.svg)


##### Interpolation

###### T interpolation

Given a given position index of a particle with the `T` grid, the determination of the interpolation is done as follows:

- First, the `i` index of the `T` grid column left of the particle is found. This is done by using `floor` on the `x - 0.5` value. The removing of 0.5 is to convert the `x` value from the computational grid to the `T` grid.
- Then, the `j` index of the `T` grid line below the particle is found. This is done by using `floor` on the `y - 0.5` value. The removing of 0.5 is to convert the `y` value from the computational grid to the `T` grid.
- The area to consider is defined by the `[i, i + 1]` and `[j, j + 1]` squares.

An illustration is given below

![Interpolation of T points from ROMS grid](developer/grid/_static/interpolation_t_roms.svg)


###### U interpolation

Interpolation of `U` variables is done as follows:

- First, the `i` index of the `U` point left of the particle is found by using `floor(x - 1)`. The `-1` is to move from the computation grid to the `U` grid system.
- Then, the `j` index of the `U` grid line below the particle is found. This is done by using `floor` on the `y - 0.5` value. The `-0.5` is to move from the computation grid to the `U` grid system.
- The box used to average the variable is therefore defined by the `[i, i + 1]` and `[j, j + 1]` squares.

![Interpolation of U points from ROMS grid](developer/grid/_static/interpolation_u_roms.svg)


###### V interpolation

Interpolation of `V` variables is done as follows:

- First, the `i` index of the `V` point left of the particle is found by using `floor(x - 0.5)`. The `-0.5` is to move from the computation grid to the `U` grid system.
- Then, the `j` index of the `V` grid line below the particle is found. This is done by using `floor` on the `y - 1` value. The `-1` is to move from the computation grid to the `U` grid system.
- The box used to average the variable is therefore defined by the `[i, i + 1]` and `[j, j + 1]` squares.

![Interpolation of V points from ROMS grid](developer/grid/_static/interpolation_v_roms.svg)


##### Is on edge

A particle is considered to be out of domain when $x \leq 1$ (no possible interpolation of U on the western face), when $y \geq N_x - 1$
(no possible interpolation of U on the eastern face), when $y \leq 1$ (no possible interpolation of V on the southern domain) or when $y \geq N_y - 1$ (no possible interpolation of V on the northern part of the domain).

The excluded domain is represented below:

![Excluded domain in the Ichthyop ROMS simulations.](developer/grid/_static/is_on_edge_roms.svg)


#### Vertical

##### Sigma coordinate

The vertical coordinate system of ROMS is discussed on [WikiRoms](https://www.myroms.org/wiki/Vertical_S-coordinate) and shown below.

![Vertical grid in the ROMS model](developer/grid/_static/roms_vertical_grid.png)

The vertical coordinate in ROMS is $\sigma$, which varies between $-1$ (ocean bottom) and $0$ (ocean surface). There are two implementations of the $\sigma$ to $z$ conversion, both using sea-level anomalies ($\zeta$) and bathymetry ($h$).

The first one is available in ROMS since 1999 and is given by:

$$
z(x,y,\sigma,t) = S(x,y,\sigma) + \zeta(x,y,t) \left[1 + \dfrac{S(x,y,\sigma)}{h(x,y)}\right]
$$

with

$$
S(x,y,\sigma) = h_c \, \sigma + \left[h(x,y) - h_c\right] \, C(\sigma)
$$

and $h_c$ and $C(\sigma)$ parameters provided in the grid file.

The second transform, called UCLA-ROMS, is given by:

$$
z(x,y,\sigma,t) = \zeta(x,y,t) + \left[\zeta(x,y,t) + h(x,y)\right] \, S(x,y,\sigma)
$$

with

$$
S(x,y,\sigma) = \dfrac{h_c \, \sigma + h(x,y)\, C(\sigma)}{h_c + h(x,y)}
$$

and $h_c$ and $C(\sigma)$ parameters provided in the grid file.

It can be rewritten in the same form as the original one.

$$
z(x,y,\sigma,t) = h(x,y) S(x,y,\sigma) + \zeta(x,y,t) + \zeta(x,y,t) S(x,y,\sigma)
$$

$$
z(x,y,\sigma,t) = h(x,y) S(x,y,\sigma) + \zeta(x,y,t) \left[1 + S(x,y,\sigma)\right]
$$

$$
z(x,y,\sigma,t) = h(x,y) S(x,y,\sigma) + \zeta(x,y,t) \left[1 + \dfrac{h(x, y)S(x,y,\sigma)}{h(x, y)}\right]
$$

In this form, both formulations can be expressed as:

$$
z(x,y,\sigma,t) = H_0(x, y, \sigma) + \zeta(x,y,t) \left[1 + \dfrac{H_0(x, y, \sigma)}{h(x, y)}\right]
$$

with $H_0$ which is constant overt time, and which varies between the classical and the UCLA formulations. For the classical formulation:

$$
H_0(x, y, \sigma) = S(x, y, \sigma)
$$

For the UCLA formulation:

$$
H_0(x, y, \sigma) = h(x, y) S(x, y, \sigma)
$$
